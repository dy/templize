const e={};var t=t=>{let s,r="",n=0,a=e[t],i=0;if(a)return a;for(a=[];s=t[i];i++)"{"===s&&"{"===t[i+1]&&"\\"!==t[i-1]&&t[i+2]?1==++n&&(r&&a.push([0,r]),r="",i+=2):"}"===s&&"}"===t[i+1]&&"\\"!==t[i-1]&&(--n||(n=!1,a.push([1,r.trim()]),r="",i+=2)),r+=t[i]||"";return r&&a.push([0,r]),e[t]=a};class s{constructor(e,t){this.setter=e,this.expression=t}toString(){return this.value}}class r extends s{#e="";get attributeName(){return this.setter.attr.name}get attributeNamespace(){return this.setter.attr.namespaceURI}get element(){return this.setter.element}get value(){return this.#e}set value(e){this.#e=e;const{attr:t,element:s,parts:r}=this.setter;1===r.length?null===r[0].value?s.removeAttributeNS(t.namespaceURI,t.name):s.setAttributeNS(t.namespaceURI,t.name,e):s.setAttributeNS(t.namespaceURI,t.name,r.join(""))}get booleanValue(){this.setter.element.hasAttribute(this.setter.attr.name)}set booleanValue(e){if(1!==this.setter.parts.length)throw new DOMException("Value is not fully templatized","NotSupportedError");this.value=""}}class n extends s{nodes=[];get parentNode(){return this.setter.parentNode}get nextSibling(){return this.nodes[this.nodes.length-1].nextSibling}get previousSibling(){return this.nodes[0].previousSibling}get value(){return this.nodes.map((e=>e.textContent)).join("")}set value(e){this.replace(e)}replace(...e){e=(e||[new Text]).map((e=>"string"==typeof e?new Text(e):e)),this.nodes=((e,t,s,r=null)=>{let n,a,i,l=0,o=s.length,u=t.length;for(;l<o&&l<u&&t[l]==s[l];)l++;for(;l<o&&l<u&&s[o-1]==t[u-1];)r=s[(--u,--o)];if(l==u)for(;l<o;)e.insertBefore(s[l++],r);else{for(n=t[l];l<o;)i=s[l++],a=n?n.nextSibling:r,n==i?n=a:l<o&&s[l]==a?(e.replaceChild(i,n),n=a):e.insertBefore(i,n);for(;n!=r;)a=n.nextSibling,e.removeChild(n),n=a}return s})(this.setter.parentNode,this.nodes,e,this.setter.nextSibling)}}const a={processCallback(e,t,s){if(s)for(const e of t)e.expression in s&&(e.value=s[e.expression])}},i=(e,t,s=a)=>{let r=l(e),n=s.create||s.createCallback,i=s.call?s:s.process||s.processCallback;return n?.(e,r,t),t&&i?.(e,r,t),{parts:r,params:t,update:s=>Object.assign(t,s)&&i(e,r,s)}},l=(e,s=[])=>{for(let n of e.attributes)if(n.value.includes("{{")){let a={element:e,attr:n,parts:[]};for(let[e,i]of t(n.value))e?(i=new r(a,i),a.parts.push(i),s.push(i)):a.parts.push(i);n.value=a.parts.join("")}for(let r of e.childNodes)if(1===r.nodeType)l(r,s);else if(3===r.nodeType&&r.data.includes("{{")){let a={parentNode:e,previousSibling:r.previousSibling,nextSibling:r.nextSibling,parts:[]};for(const[e,i]of t(r.data.trim()))e?(i=new n(a,i),a.parts.push(i),s.push(i)):(i=new Text(i),a.parts.push(i));r.replaceWith(...a.parts)}return s};export{i as default};